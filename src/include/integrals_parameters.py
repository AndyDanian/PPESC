spatial_symmetry: dict[str, int] = {
    "one": 0,
    "overlap": 0,
    "nucpot": 0,
    "kinetic": 0,
    "angmom": 0,
    "sd": 1,
    "fc": 0,
    "fcke": 0,
    "darwin": 0,
    "massvelo": 0,
    "nelfld": 1,
    "diplen": 0,
    "dipvel": 0,
    "pso": 1,
    "nstcgo": 1,
    "dnske": 1,
    "cdnske": 1,
    "psoke": 1,
    "psolap": 1,
    "psooz": 1,
    "ozke": 0,
    "spinorbit": 1,
    "szke": 0,
    "dxdx": 0,
    "dydy": 0,
    "dzdz": 0,
    "dxdy": 0,
    "dxdz": 0,
    "dydx": 0,
    "dydz": 0,
    "dzdx": 0,
    "dzdy": 0,
    "sofiel": 1,
    "pnstcgop": 1,
    "pangmomp": 0,
    "ppsop": 1,
    "curllgxp": 0,
    "curllgyp": 0,
    "curllgzp": 0,
    "pxabx": 0,
    "pxaby": 0,
    "pxabz": 0,
    "lap_abxxp": 0,
    "lap_abyxp": 0,
    "lap_abzxp": 0,
    "lap_pxabx": 0,
    "lap_pxaby": 0,
    "lap_pxabz": 0,
    "lapauxxp": 1,
    "rpsod": 1,
}
magnetic: dict[str, int] = {
    "one": 0,
    "overlap": 0,
    "nucpot": 0,
    "kinetic": 0,
    "angmom": 1,
    "sd": 1,
    "fc": 0,
    "fcke": 0,
    "darwin": 0,
    "massvelo": 0,
    "nelfld": 0,
    "diplen": 1,
    "dipvel": 1,
    "pso": 0,
    "nstcgo": 1,
    "dnske": 1,
    "cdnske": 1,
    "psoke": 0,
    "psolap": 0,
    "psooz": 1,
    "ozke": 1,
    "spinorbit": 0,
    "szke": 0,
    "dxdx": 0,
    "dydy": 0,
    "dzdz": 0,
    "dxdy": 0,
    "dxdz": 0,
    "dydx": 0,
    "dydz": 0,
    "dzdx": 0,
    "dzdy": 0,
    "sofield": 1,
    "pnstcgop": 1,
    "pangmomp": 1,
    "ppsop": 0,
    "curllgxp": 1,
    "curllgyp": 1,
    "curllgzp": 1,
    "pxabx": 1,
    "pxaby": 1,
    "pxabz": 1,
    "lap_abxxp": 1,
    "lap_abyxp": 1,
    "lap_abzxp": 1,
    "lap_pxabx": 1,
    "lap_pxaby": 1,
    "lap_pxabz": 1,
    "lapauxxp": 0,
    "rpsod": 0,
}
integral_symmetry: dict[str, str] = {
    "one": "sym",
    "overlap": "sym",
    "nucpot": "sym",
    "kinetic": "sym",
    "angmom": "antisym",
    "sd": "sym",
    "fc": "sym",
    "fcke": "sym",
    "darwin": "sym",
    "massvelo": "sym",
    "nelfld": "sym",
    "diplen": "sym",
    "dipvel": "antisym",
    "pso": "antisym",
    "nstcgo": "sym",
    "dnske": "sym",
    "cdnske": "sym",
    "psoke": "square",
    "psolap": "square",
    "psooz": "square",
    "ozke": "antisym",
    "spinorbit": "antisym",
    "szke": "sym",
    "dxdx": "sym",
    "dydy": "sym",
    "dzdz": "sym",
    "dxdy": "sym",
    "dxdz": "sym",
    "dydx": "sym",
    "dydz": "sym",
    "dzdx": "sym",
    "dzdy": "sym",
    "sofiel": "sym",
    "pnstcgop": "sym",
    "pangmomp": "antisym",
    "ppsop": "antisym",
    "curllgxp": "sym",
    "curllgyp": "sym",
    "curllgzp": "sym",
    "pxabx": "square",
    "pxaby": "square",
    "pxabz": "square",
    "lap_abxxp": "sym",
    "lap_abyxp": "sym",
    "lap_abzxp": "sym",
    "lap_pxabx": "square",
    "lap_pxaby": "square",
    "lap_pxabz": "square",
    "lapauxxp": "square",
    "rpsod": "square",
}

# Separated magnetic axes of cartessian component (laplacian), i. e., to make a cartessian component by
# separated in e_integral.py

magnetic_axes: dict[int, str] = {0: "x", 1: "y", 2: "z"}

second_derivatives_string: dict[int, str] = {
    "dxdx": 0,
    "dydy": 1,
    "dzdz": 2,
    "dxdy": 3,
    "dxdz": 4,
    "dydx": 5,
    "dydz": 6,
    "dzdx": 7,
    "dzdy": 8,
}

spin_zeeman_kientic_tensor: dict[int, str] = {
    "szke xx": 0,
    "szke xy": 1,
    "szke xz": 2,
    "szke yx": 3,
    "szke yy": 4,
    "szke yz": 5,
    "szke zx": 6,
    "szke zy": 7,
    "szke zz": 8,
}


large_name: dict[str, str] = {
    "one": "Matriz fill with one",
    "overlap": "Overlap",
    "nucpot": "Nuclear Potential Energy",
    "kinetic": "Kinetic Energy",
    "angmom": "Angular Momentum",
    "sd": "Spin-Dipole",
    "fc": "Fermi-Contact",
    "fcke": "Kinetic Energy Correction Fermi-Contact",
    "darwin": "One-Electron Darwin",
    "massvelo": "Mass--velocity",
    "nelfld": "Nuclear Electric Field",
    "diplen": "Dipole Length",
    "dipvel": "Dipole Velocity",
    "pso": "Paramagnetic Spin-Orbit",
    "nstcgo": "Diamagnetic Nuclear Shielding Tensor",
    "dnske": "Kinetic Energy Correction to Diamagnetic Nuclear Shielding Tensor",
    "cdnske": "Conmutator Kinetic Energy Correction to Diamagnetic Nuclear Shielding Tensor",
    "psoke": "Kinetic Energy Correction to the Paramagnetic Spin-Orbit",
    "psolap": "Paramagnetic Spin-Orbit by Laplacian",
    "psooz": "Orbital-Zeeman Correction to the Paramagnetic Spin-Orbit",
    "ozke": "Kinetic Energy Correction to Orbital--Zeeman",
    "spinorbit": "One-Elctron Spatial Spin-Orbit",
    "szke": "Kinetic Energy Correction to the Spin--Zeeman",
    "dxdx": "Second derivative with respecto to x",
    "dydy": "Second derivative with respecto to y",
    "dzdz": "Second derivative with respecto to z",
    "dxdy": "Derivative with respecto to x and y",
    "dxdz": "Derivative with respecto to x and z",
    "dydx": "Derivative with respecto to y and x",
    "dydz": "Derivative with respecto to y and z",
    "dzdx": "Derivative with respecto to z and x",
    "dzdy": "Derivative with respecto to z and y",
    "sofiel": "Extenal Magnetic-Field Dependence of the Spin-Orbit Operator",
    "pnstcgop": "nabla(Diamagnetic Nuclear Shielding Tensor)nabla",
    "pangmomp": "nabla (Angulat Mometum)_gauge nabla",
    "ppsop": "nabla PSO nabla",
    "curllgxp": "Curl Angular Momentum Atomic Integrals on X by Lineal Momentum",
    "curllgyp": "Curl Angular Momentum Atomic Integrals on Y by Lineal Momentum",
    "curllgzp": "Curl Angular Momentum Atomic Integrals on Z by Lineal Momentum",
    "pxabx": "d/dB_x (p x (B x r_g))",
    "pxaby": "d/dB_y (p x (B x r_g))",
    "pxabz": "d/dB_z (p x (B x r_g))",
    "lap_abxxp": "d/dB_x [p², (B x r_g) x p]",
    "lap_abyxp": "d/dB_y [p², (B x r_g) x p]",
    "lap_abzxp": "d/dB_z [p², (B x r_g) x p]",
    "lap_pxabx": "d/dB_x {p², p x (B x r_g)}",
    "lap_pxaby": "d/dB_y {p², p x (B x r_g)}",
    "lap_pxabz": "d/dB_z {p², p x (B x r_g)}",
    "lapauxxp": "d/du_k [p², (u_k x r_k)/r³_k x p]",
    "rpsod": "(x_{k,i}L_{k,i}dx_i + x_{k,j}x_{k,l}(d²x_j-d²x_l))/r⁵_k",
}
